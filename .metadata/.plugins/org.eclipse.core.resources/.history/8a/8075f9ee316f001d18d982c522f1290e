#include "int.h"


/**
 ******************************************************************************
 * Function prototypes
 ******************************************************************************
 **/
void XOSCI_InterruptClear(XOSCI * InstancePtr, u32 Mask);

/**
 ******************************************************************************
 * This is the interrupt handler routine for the OSCI .
 ******************************************************************************
 **/
void OSCI_Handler(void *CallbackRef) {
	uint32_t address = 0;
	INT_disable();

	address = XOSCI_DiscreteRead(&OSCIInst, 1);
	BMP_setFast(address, (uint16_t) XOSCI_DiscreteRead(&OSCIInst, 2));

	INT_enable();
}

int OSCI_Init() {
	int Status;

	Status = INT_connect(OSCI_INTERRUPT_ID, (XInterruptHandler) OSCI_Handler, (void *) &OSCIInst);
	if (Status != XST_SUCCESS) {
		return XST_FAILURE;
	}

	return XST_SUCCESS;
}


void OSCI_EnableInterrupt() {
}
